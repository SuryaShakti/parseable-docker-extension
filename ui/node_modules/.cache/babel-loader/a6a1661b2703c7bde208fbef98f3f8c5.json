{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\CODE\\\\parseable-docker-extension\\\\ui\\\\src\\\\components\\\\HeroSection\\\\index.js\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeroSection() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"250px\",\n                src: \"https://www.parseable.io/img/Logo%20parseable.svg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 12,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"#666666\",\n              fontWeight: \"bold\",\n              children: \"Parseable Builder Extxension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              mt: 2,\n              variant: \"body1\",\n              color: \"#666666\",\n              children: \"Logs are noisy. Finding information is difficult and time consuming. Enhance your logging stack with Parseable, observe easily and act faster.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              mt: 2,\n              variant: \"h6\",\n              color: \"#666666\",\n              children: \"How to use this extension.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              mt: 1,\n              variant: \"body1\",\n              color: \"#666666\",\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Eleifend faucibus sed vel in purus. Pretium et felis habitant nunc ultrices at viverra purus Logs are noisy. Finding information is difficult and time consuming. Enhance your logging stack with Parseable, observe easily and act faster.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"100%\",\n                src: \"https://www.parseable.io/img/feature-illustration.svg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        width: \"full\",\n        height: 64,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        bgcolor: \"#04DF00\",\n        color: \"white\",\n        borderRadius: 2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Note: If you don\\u2019t fill these fields then also you can run parseable container. it will take default values mentioned in the fields itself.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = HeroSection;\nexport default HeroSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["Grid","Typography","Box","Container","HeroSection"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/CODE/parseable-docker-extension/ui/src/components/HeroSection/index.js"],"sourcesContent":["import { Grid, Typography } from \"@mui/material\";\r\nimport { Box, Container } from \"@mui/system\";\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <Box>\r\n      <Container maxWidth=\"lg\">\r\n        <Box  container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <Box>\r\n              <Box>\r\n                <img\r\n                  width=\"250px\"\r\n                  src={\"https://www.parseable.io/img/Logo%20parseable.svg\"}\r\n                  alt={\"\"}\r\n                />\r\n              </Box>\r\n              <Typography variant=\"h4\" color={\"#666666\"} fontWeight=\"bold\">\r\n                Parseable Builder Extxension\r\n              </Typography>\r\n              <Typography mt={2} variant=\"body1\" color={\"#666666\"}>\r\n                Logs are noisy. Finding information is difficult and time\r\n                consuming. Enhance your logging stack with Parseable, observe\r\n                easily and act faster.\r\n              </Typography>\r\n              <Typography mt={2} variant=\"h6\" color={\"#666666\"}>\r\n                How to use this extension.\r\n              </Typography>\r\n              <Typography mt={1} variant=\"body1\" color={\"#666666\"}>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Eleifend faucibus sed vel in purus. Pretium et felis habitant\r\n                nunc ultrices at viverra purus Logs are noisy. Finding\r\n                information is difficult and time consuming. Enhance your\r\n                logging stack with Parseable, observe easily and act faster.\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Box>\r\n              <Box>\r\n                <img\r\n                  width=\"100%\"\r\n                  src={\"https://www.parseable.io/img/feature-illustration.svg\"}\r\n                  alt={\"\"}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          mt={5}\r\n          width={\"full\"}\r\n          height={64}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          bgcolor=\"#04DF00\"\r\n          color=\"white\"\r\n          borderRadius={2}\r\n        >\r\n          <Typography variant=\"body1\">\r\n            Note: If you donâ€™t fill these fields then also you can run parseable\r\n            container. it will take default values mentioned in the fields\r\n            itself.\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n"],"mappings":";AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,aAA/B;;;AAEA,SAASC,WAAT,GAAuB;EACrB,oBACE,QAAC,GAAD;IAAA,uBACE,QAAC,SAAD;MAAW,QAAQ,EAAC,IAApB;MAAA,wBACE,QAAC,GAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,CAAzB;QAAA,wBACE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,GAAD;YAAA,wBACE,QAAC,GAAD;cAAA,uBACE;gBACE,KAAK,EAAC,OADR;gBAEE,GAAG,EAAE,mDAFP;gBAGE,GAAG,EAAE;cAHP;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAQE,QAAC,UAAD;cAAY,OAAO,EAAC,IAApB;cAAyB,KAAK,EAAE,SAAhC;cAA2C,UAAU,EAAC,MAAtD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QARF,eAWE,QAAC,UAAD;cAAY,EAAE,EAAE,CAAhB;cAAmB,OAAO,EAAC,OAA3B;cAAmC,KAAK,EAAE,SAA1C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAXF,eAgBE,QAAC,UAAD;cAAY,EAAE,EAAE,CAAhB;cAAmB,OAAO,EAAC,IAA3B;cAAgC,KAAK,EAAE,SAAvC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAhBF,eAmBE,QAAC,UAAD;cAAY,EAAE,EAAE,CAAhB;cAAmB,OAAO,EAAC,OAA3B;cAAmC,KAAK,EAAE,SAA1C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAnBF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eA8BE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,GAAD;YAAA,uBACE,QAAC,GAAD;cAAA,uBACE;gBACE,KAAK,EAAC,MADR;gBAEE,GAAG,EAAE,uDAFP;gBAGE,GAAG,EAAE;cAHP;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QA9BF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eA2CE,QAAC,GAAD;QACE,EAAE,EAAE,CADN;QAEE,KAAK,EAAE,MAFT;QAGE,MAAM,EAAE,EAHV;QAIE,OAAO,EAAC,MAJV;QAKE,cAAc,EAAC,QALjB;QAME,UAAU,EAAC,QANb;QAOE,OAAO,EAAC,SAPV;QAQE,KAAK,EAAC,OARR;QASE,YAAY,EAAE,CAThB;QAAA,uBAWE,QAAC,UAAD;UAAY,OAAO,EAAC,OAApB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAXF;QAAA;QAAA;QAAA;MAAA,QA3CF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiED;;KAlEQA,W;AAoET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}