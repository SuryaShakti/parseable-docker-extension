{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\CODE\\\\parseable-docker-extension\\\\ui\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport { createDockerDesktopClient } from '@docker/extension-api-client';\nimport { Stack, TextField, Typography } from '@mui/material'; // Note: This line relies on Docker Desktop's presence as a host application.\n// If you're running this React app in a browser, it won't work properly.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst client = createDockerDesktopClient();\n\nfunction useDockerDesktopClient() {\n  return client;\n}\n\nexport function App() {\n  _s();\n\n  const [response, setResponse] = React.useState();\n  const ddClient = useDockerDesktopClient();\n\n  const fetchAndDisplayResponse = async () => {\n    var _ddClient$extension$v, _ddClient$extension$v2;\n\n    const result = await ((_ddClient$extension$v = ddClient.extension.vm) === null || _ddClient$extension$v === void 0 ? void 0 : (_ddClient$extension$v2 = _ddClient$extension$v.service) === null || _ddClient$extension$v2 === void 0 ? void 0 : _ddClient$extension$v2.get('/hello'));\n    setResponse(JSON.stringify(result));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"dddd\", /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"Docker extension demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      sx: {\n        mt: 2\n      },\n      children: \"This is a basic page rendered with MUI, using Docker's theme. Read the MUI documentation to learn more. Using MUI in a conventional way and avoiding custom styling will help make sure your extension continues to look great as Docker's theme evolves.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      sx: {\n        mt: 2\n      },\n      children: \"Pressing the below button will trigger a request to the backend. Its response will appear in the textarea.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      alignItems: \"start\",\n      spacing: 2,\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: fetchAndDisplayResponse,\n        children: \"Call backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Backend response\",\n        sx: {\n          width: 480\n        },\n        disabled: true,\n        multiline: true,\n        variant: \"outlined\",\n        minRows: 5,\n        value: response !== null && response !== void 0 ? response : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"+KThc631mRSfJauXbj7FTdGaFwA=\", false, function () {\n  return [useDockerDesktopClient];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","createDockerDesktopClient","Stack","TextField","Typography","client","useDockerDesktopClient","App","response","setResponse","useState","ddClient","fetchAndDisplayResponse","result","extension","vm","service","get","JSON","stringify","mt","width"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/CODE/parseable-docker-extension/ui/src/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { createDockerDesktopClient } from '@docker/extension-api-client';\r\nimport { Stack, TextField, Typography } from '@mui/material';\r\n\r\n// Note: This line relies on Docker Desktop's presence as a host application.\r\n// If you're running this React app in a browser, it won't work properly.\r\nconst client = createDockerDesktopClient();\r\n\r\nfunction useDockerDesktopClient() {\r\n  return client;\r\n}\r\n\r\nexport function App() {\r\n  const [response, setResponse] = React.useState<string>();\r\n  const ddClient = useDockerDesktopClient();\r\n\r\n  const fetchAndDisplayResponse = async () => {\r\n    const result = await ddClient.extension.vm?.service?.get('/hello');\r\n    setResponse(JSON.stringify(result));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      dddd\r\n      <Typography variant=\"h3\">Docker extension demo</Typography>\r\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n        This is a basic page rendered with MUI, using Docker's theme. Read the\r\n        MUI documentation to learn more. Using MUI in a conventional way and\r\n        avoiding custom styling will help make sure your extension continues to\r\n        look great as Docker's theme evolves.\r\n      </Typography>\r\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n        Pressing the below button will trigger a request to the backend. Its\r\n        response will appear in the textarea.\r\n      </Typography>\r\n      <Stack direction=\"row\" alignItems=\"start\" spacing={2} sx={{ mt: 4 }}>\r\n        <Button variant=\"contained\" onClick={fetchAndDisplayResponse}>\r\n          Call backend\r\n        </Button>\r\n\r\n        <TextField\r\n          label=\"Backend response\"\r\n          sx={{ width: 480 }}\r\n          disabled\r\n          multiline\r\n          variant=\"outlined\"\r\n          minRows={5}\r\n          value={response ?? ''}\r\n        />\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,yBAAT,QAA0C,8BAA1C;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,eAA7C,C,CAEA;AACA;;;;AACA,MAAMC,MAAM,GAAGJ,yBAAyB,EAAxC;;AAEA,SAASK,sBAAT,GAAkC;EAChC,OAAOD,MAAP;AACD;;AAED,OAAO,SAASE,GAAT,GAAe;EAAA;;EACpB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,EAAhC;EACA,MAAMC,QAAQ,GAAGL,sBAAsB,EAAvC;;EAEA,MAAMM,uBAAuB,GAAG,YAAY;IAAA;;IAC1C,MAAMC,MAAM,GAAG,gCAAMF,QAAQ,CAACG,SAAT,CAAmBC,EAAzB,oFAAM,sBAAuBC,OAA7B,2DAAM,uBAAgCC,GAAhC,CAAoC,QAApC,CAAN,CAAf;IACAR,WAAW,CAACS,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAD,CAAX;EACD,CAHD;;EAKA,oBACE;IAAA,gCAEE,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,UAAD;MAAY,OAAO,EAAC,OAApB;MAA4B,KAAK,EAAC,gBAAlC;MAAmD,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAN,CAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eASE,QAAC,UAAD;MAAY,OAAO,EAAC,OAApB;MAA4B,KAAK,EAAC,gBAAlC;MAAmD,EAAE,EAAE;QAAEA,EAAE,EAAE;MAAN,CAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAaE,QAAC,KAAD;MAAO,SAAS,EAAC,KAAjB;MAAuB,UAAU,EAAC,OAAlC;MAA0C,OAAO,EAAE,CAAnD;MAAsD,EAAE,EAAE;QAAEA,EAAE,EAAE;MAAN,CAA1D;MAAA,wBACE,QAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAA4B,OAAO,EAAER,uBAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,SAAD;QACE,KAAK,EAAC,kBADR;QAEE,EAAE,EAAE;UAAES,KAAK,EAAE;QAAT,CAFN;QAGE,QAAQ,MAHV;QAIE,SAAS,MAJX;QAKE,OAAO,EAAC,UALV;QAME,OAAO,EAAE,CANX;QAOE,KAAK,EAAEb,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAc;MAPrB;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA,gBADF;AA+BD;;GAxCeD,G;UAEGD,sB;;;KAFHC,G"},"metadata":{},"sourceType":"module"}